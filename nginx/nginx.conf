# Define an upstream block named 'djangobnb_backend' to group backend servers
upstream djangobnb_backend {
    # Define the backend server 'web' (name of the Docker service) listening on port 8000
    server web:8000;
}

upstream daphne_backend {
    # Define the backend server 'daphne' (name of the Docker service) listening on port 8002
    server daphne:8002;
}

server {
    # Listen on port 80 for incoming HTTP requests
    listen 80;


    # Location block for handling all requests except those that match the '/ws/' pattern
    location / {
        # Pass requests to the 'djangobnb_backend' upstream
        proxy_pass http://djangobnb_backend;
        # Preserve the original Host header
        proxy_set_header Host $host;
        # Add the client IP to the X-Forwarded-For header
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Disable automatic HTTP to HTTPS redirection
        proxy_redirect off;
    }


    # NEWLY ADDED
    # Newly added block for serving static files from the '/static/' directory
    location /static/ {
        alias /usr/src/djangobnb_backend/static/;
    }


    # NEWLY ADDED
    # Location block for serving static files from the '/media/' directory
    location /media/ {
        alias /usr/src/djangobnb_backend/media/;
    }


    # Location block for handling WebSocket requests (URLs starting with '/ws/')
    location /ws/ {
        # Pass WebSocket requests to the daphne backend
        proxy_pass http://daphne_backend;
        # Use HTTP/1.1 for WebSocket support
        proxy_http_version 1.1;
        # Set the Upgrade header to handle WebSocket connections
        proxy_set_header Upgrade $http_upgrade;
        # Set the Connection header to 'upgrade' to handle WebSocket connections
        proxy_set_header Connection "upgrade";
        # Preserve the original Host header
        proxy_set_header Host $host;
        # Disable caching for WebSocket connections
        proxy_cache_bypass $http_upgrade;
    }
}
